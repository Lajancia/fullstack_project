{"remainingRequest":"/Users/suminhwang/Downloads/fullstack/front_end/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/suminhwang/Downloads/fullstack/front_end/src/components/sidebar/SidebarLink.vue?vue&type=template&id=f923887a","dependencies":[{"path":"/Users/suminhwang/Downloads/fullstack/front_end/src/components/sidebar/SidebarLink.vue","mtime":1638767546209},{"path":"/Users/suminhwang/Downloads/fullstack/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1632324860000},{"path":"/Users/suminhwang/Downloads/fullstack/front_end/node_modules/babel-loader/lib/index.js","mtime":1632324860000},{"path":"/Users/suminhwang/Downloads/fullstack/front_end/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632324860000},{"path":"/Users/suminhwang/Downloads/fullstack/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1632324860000},{"path":"/Users/suminhwang/Downloads/fullstack/front_end/node_modules/vue-loader-v16/dist/index.js","mtime":1632324860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHJvdXRlci1saW5rIDp0bz0idG8iIGNsYXNzPSJsaW5rIiA6Y2xhc3M9InsgYWN0aXZlOiBpc0FjdGl2ZSB9Ij4KICA8L3JvdXRlci1saW5rPgo="},{"version":3,"sources":["/Users/suminhwang/Downloads/fullstack/front_end/src/components/sidebar/SidebarLink.vue"],"names":[],"mappings":";EAiBE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/suminhwang/Downloads/fullstack/front_end/src/components/sidebar/SidebarLink.vue","sourceRoot":"","sourcesContent":["<script>\nimport { computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { collapsed } from \"./state\";\n\nexport default {\n  props: {\n    to: { type: String, required: true },\n    icon: { type: String, required: true },\n  },\n  setup(props) {\n    const route = useRoute();\n    const isActive = computed(() => route.path === props.to);\n  },\n};\n</script>\n<template>\n  <router-link :to=\"to\" class=\"link\" :class=\"{ active: isActive }\">\n  </router-link>\n</template>\n"]}]}